/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
import java.util.Collections;
class Solution {
    /*
    You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.*/
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        ListNode small=l1;
        ListNode big=l2;
        if(l1.val>l2.val)
        {
            small=l2;
            big=l1;
        }
        ListNode result=small;
        while(small!=null && big!=null)
        {
            ListNode temp=null;
            while(small!=null && small.val<=big.val)
            {
                temp=small;
                small=small.next;
            }
            temp.next=big;
            ListNode a=small;
            small=big;
            big=a;
        }
        return result;
     
    }
}
